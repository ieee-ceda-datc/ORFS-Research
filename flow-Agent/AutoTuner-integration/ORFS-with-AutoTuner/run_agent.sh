#!/bin/bash

# Exit immediately if a command exits with a non-zero status.
set -e

# Define the virtual environment directory name
VENV_DIR=".venv_analyst_agent"

# Example parameters for the agent (replace with your desired test case)
CIRCUIT="aes"
PDK="asap7"
OPTIMIZATION_GOAL="ECP_final"

# Check if .env file exists, if not, create a placeholder
if [ ! -f .env ]; then
  echo "INFO: .env file not found. Creating a placeholder." 
  echo "Please edit .env and add your ANTHROPIC_API_KEY." 
  echo "ANTHROPIC_API_KEY=YOUR_ANTHROPIC_API_KEY_HERE" > .env
fi

# Check if output.json exists, if not, inform the user
if [ ! -f output.json ]; then
  echo "ERROR: output.json not found in the current directory." 
  echo "Please ensure output.json (generated by parser.py) is present before running the agent." 
  exit 1
fi

# Create virtual environment if it doesn't exist
if [ ! -d "$VENV_DIR" ]; then
  echo "INFO: Creating Python virtual environment in $VENV_DIR..."
  python3 -m venv "$VENV_DIR"
else
  echo "INFO: Virtual environment $VENV_DIR already exists."
fi

# Activate virtual environment
# shellcheck disable=SC1091
source "$VENV_DIR/bin/activate"
echo "INFO: Virtual environment activated."

# Install dependencies
echo "INFO: Installing dependencies from requirements.txt..."
pip install -r requirements.txt
echo "INFO: Dependencies installed."

# Run the agent script
echo "INFO: Running the Analyst Agent Workbench..."
echo "INFO: Circuit: $CIRCUIT, PDK: $PDK, Goal: $OPTIMIZATION_GOAL"

# The script analyst_agent_workbench.py will generate a log file with a UUID.
# We capture the expected pattern of the log file name here to inform the user.
LOG_FILE_PATTERN="${CIRCUIT}_${PDK}_${OPTIMIZATION_GOAL}_context_*.txt"

python analyst_agent_workbench.py "$CIRCUIT" "$PDK" "$OPTIMIZATION_GOAL"

echo "INFO: Agent run finished."
echo "INFO: Check the console output above for the agent's interactions."
echo "INFO: The detailed context log file should match the pattern: $LOG_FILE_PATTERN in the current directory."

# Deactivate virtual environment (optional, as script ends here)
# deactivate 